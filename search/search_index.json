{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"EGR 314 - Embedded Systems Design Project II","text":"","tags":["tag1","tag2"]},{"location":"#stem-weather-station-project","title":"STEM Weather Station Project","text":"<p>Team Number: 303</p> <p>Team Members: Jahmel Garduno, Cade Clonts, Daniel Resnick, Tyler Dean</p> <p>Preperation Date: Febuary 23, 2025</p> <p>Semester and Year: Spring 2025</p> <p>University: Arizona State University </p> <p>Professor: K. Nichols </p>","tags":["tag1","tag2"]},{"location":"#team-role","title":"Team Role","text":"<p>My role in the team is to develop the human interface subsystem for displaying temperature and humidity data from the sensor. For this subsystem, I will be using the PIC18F47Q10T-IPT microcontroller along with the Songhe OLED Display provided in class. This display will present real-time temperature and humidity readings, allowing users to interact with the data. Additionally, I will implement button controls that enable users to navigate through different data points and select the specific information they want to view.</p> <p>To ensure seamless integration with the overall system, I will utilize a UART connection to send and receive data between the human interface subsystem and other components, including the sensor, actuator, and communication subsystems. My focus will be on maintaining efficient and responsive data transmission, ensuring that users receive accurate and timely environmental readings while enabling smooth interaction within the system.</p>","tags":["tag1","tag2"]},{"location":"#_1","title":"**","text":"","tags":["tag1","tag2"]},{"location":"#_2","title":"EGR 314 - Embedded Systems Design Project II","text":"","tags":["tag1","tag2"]},{"location":"Component%20Selection/","title":"Component Selection","text":""},{"location":"Component%20Selection/#microcontroller","title":"Microcontroller","text":"Solution Pros Cons  Solution 1 ESP32-S3-WROOM-1-N4 Cost: $2.95 Per Unit Link to Product - Faster Processing for complex tasks- Built in Wifi and Bluetooth 5 Connectivity- Larger memory storage - Higher Power Consumption- Complex Peripheral Management- Much more complex memory management  Solution 2 PIC18F47Q10T-I/PT Cost: $1.69 Per Unit Link to Product - Simple and easy architecture to program- Multiple low power modes; overall low energy consumption- More Reliable for wired standalone subsystems - No built in wireless capabilities- Fewer advanced I/O options- Limited memory for advanced applications  Solution 3 PIC18F47Q10T-I/MP Cost: $1.74 Per Unit Link to Product - Faster Processing speed- Adjustable GPIO pins- 2 UART and 2 ICSP Pins - Slower processing speeds- No built in wifi or bluetooth modules- Requires complex PCB design for high frequency operation <p>Choice: Solution 2 - PIC18F47Q10T-I/PT</p> <p>Rationale: The PIC18F47Q10T-I/PTc offers an excellent balance of versatility, functionality, and efficient use of board space. With a rich array of bidirectional I/O pins that support both digital and analog functions, along with configurable peripherals such as timers, communication interfaces, and the Peripheral Pin Select (PPS) feature, this module provides the flexibility needed to handle complex tasks and interface with various sensors and actuators. Additionally, the integration of low-power features and dedicated programming interfaces makes it ideal for projects requiring robust performance in energy-sensitive environments. This combination of features in a compact package ensures that the design is both scalable and cost-effective, meeting the project's performance and connectivity requirements without unnecessary complexity.</p>"},{"location":"Component%20Selection/#voltage-regulator","title":"Voltage Regulator","text":"Solution Pros Cons  Solution 1 LM2575WU Cost: $3.95 Per Unit Link to Product - High Efficiency- High heat protection- Prior use in class with through hole version - Switch frequency make noise- Limited Stock  Solution 2 TPS75133QPWPR Cost: $4.12 Per Unit Link to Product - High Efficiency- High Temperature Range - Switch frequency make noise- Low dropout Voltage- 5.5 V Max Input  Solution 3 RP509Z001D-E2-F Cost: $0.70 Per Unit Link to Product - High Efficiency- Very Inexpensive - Very Difficult Soldering- Low max Temp- 6.5 V Max Input <p>Choice: Solution 1 - LM2575WU </p> <p>Rationale: The LM2575WU was chosen as our voltage regulator due to its efficiency, reliability, and ease of integration in our power management system. As a step-down (buck) switching regulator, it efficiently converts higher input voltages, such as 9V, to a stable 3.3V output, ensuring optimal power delivery while minimizing heat dissipation compared to traditional linear regulators. With a wide input voltage range (4V to 40V) and a 1A output current capacity, it provides flexibility for various power sources and load conditions. Its internal frequency compensation, fixed 52kHz switching frequency, and minimal external component requirements simplify circuit design and reduce PCB space. Additionally, the integrated thermal shutdown and current limit protection enhance system safety and durability. Given our prior experience and familiarity with this regulator, its selection ensures a seamless and efficient voltage regulation solution for our project.</p>"},{"location":"Component%20Selection/#human-machine-interface-hmi","title":"Human Machine Interface (HMI)","text":"Solution Pros Cons  Solution 1 DIS09024P Cost: $40.63 Per Unit Link to Product - Open Source Graphics library- Peripheral rich (works with SPI, I2C, Arduino)- Only needs 5V DC - Most Expensive option- Only 2.4 Inches in size  Solution 2 Songhe 128x64 OLED Display Cost: $0.00 Per Unit Link to Product - Simple pin structure- Only needs 3.3V- Have prior knowledge of how to use - Has a slower processing speed- Only 0.96 in. in size  Solution 3 LCM-S01601DTR Cost: $11.25 Per Unit Link to Product - Runs I2C and SPI- Simple pin structure- Relatively Inexpensive - Only runs characters- Has no backlight <p>Choice: Solution 2 - Songhe 128x64 OLED Display</p> <p>Rationale: The Songhe OLED display was chosen for this project due to its high contrast, and ultra-low power consumption (0.06W), making it ideal for clear and efficient data visualization. Its I\u00b2C communication simplifies interfacing with microcontrollers, reducing wiring complexity, while the wide 3.3V-5V power range ensures flexibility. The self-luminous OLED technology eliminates the need for a backlight, improving readability and durability in various lighting conditions. Additionally, our prior experience with this display in class allows for seamless integration, minimizing troubleshooting time.</p>"},{"location":"Datasheets/","title":"Datasheets","text":""},{"location":"Datasheets/#microcontroller","title":"Microcontroller","text":"PIC18F47Q10T-I/PT Link Product Page URL Digikey PIC18F47Q10T-I/PT Data Sheet URL Datasheet"},{"location":"Datasheets/#voltage-regulator","title":"Voltage Regulator","text":"LM2575WU Link Product Page URL Digikey LM2575WU Data Sheet URL Datasheet"},{"location":"PIC18F47Q10T-IPT%20Table/","title":"PIC18F47Q10 Table","text":"PIC18F47Q10 Info Answer Comments Model PIC18F47Q10T-I/PT Product Page URL MircoChip PIC18F47Q10T-I/PT Datasheet URL Datasheet Found on Microchip.com PIC18F47Q10T-I/PT supplemental data sheet Datasheet Has more details on using Uart PIC18F47Q10T-I/PT supplemental data sheet Datasheet Has details on using SPI for debugging PIC18F47Q10T-I/PT supplemental data sheet Datasheet Has details on chaning GPIO function Vendor Link Digikey Code Examples Link All Code Examples Unit Cost $1.69 Absolute Maximum Current for entire IC 350mA as found in datasheet Supply Voltage Range 1.8V / 3.3V / 5.5V Min/Nominal/ Max, as found in datasheet Maximum GPIO current(per pin) 50mA as found in datasheet Supports External Interrupts? Yes as found in datasheet Required Programming Hardware, Cost, URL Link as found in datasheet Peripheral Availability Associated Pins UART Modules 2 modules Pins 36, 37 SPI Modules 2 modules Pins 5, 12, 13, 14, 15, 18, 19, 23 I\u00b2C Modules 2 modules Pins 16, 17, 21, 22 GPIO Pins 36 pins Pins 4-7, 12-15, 17-28, 38, 39 ADC Channels 35 channels Pins 4-7, 12-15, 17-28, 38, 39 PWM Outputs 6 outputs Pins 4-7, 12-15, 17-28, 38, 39"},{"location":"charts/","title":"Charts","text":""},{"location":"charts/#hmi-interface-block-diagram","title":"HMI Interface Block Diagram","text":"<p>---</p>"},{"location":"charts/#power-budget","title":"Power Budget","text":""},{"location":"charts/#component-power-consumption-table","title":"Component Power Consumption Table","text":"Component Voltage (V) Current (mA) Power (mW) OLED Display 3.3V 18mA 59.4mW PIC18F47Q10 MCU 3.3V 10mA 33mW LM2575WU 9V 5mA 45mW Pull-up Resistors 3.3V 3.62mA 11.95mW Total Power Needed (3.3V Side) - 31.62mA 104.35mW"},{"location":"charts/#accounting-for-voltage-regulator-efficiency","title":"Accounting for Voltage Regulator Efficiency","text":"<p>The LM2575WU operates with an efficiency of ~77% at 9V input and 3.3V output.</p> <ul> <li>Power required at 3.3V side: 104.35mW</li> <li>Power drawn from 9V source:   [   {104.35mW}/{0.77} =approx 135.5mW   ]</li> <li>Current drawn from 9V source:   [   {135.5mW}/{9V} =approx 15.1mA   ]</li> <li>Power dissipated as heat in regulator:   [   135.5mW - 104.35mW = 31.15mW   ]</li> </ul>"},{"location":"charts/#final-power-summary","title":"Final Power Summary","text":"Power Rail Current Draw (mA) Power Dissipation (mW) 3.3V Load 31.62mA 104.35mW 9V Source 15.1mA 135.5mW Regulator Heat Loss - 31.15mW <p>This power budget helps in selecting the appropriate power supply and ensuring thermal management in the circuit.</p>"},{"location":"second-page/","title":"Board Design","text":"<p>The schematic below details the Human Machine Interface (HMI) subsystem, ensuring fast real-time data display on the OLED screen from the sensor. This design incorporates several key sections, each serving a critical role in facilitating seamless data retrieval, processing, and visualization for the user.</p> <p>To support debugging and monitoring, the schematic includes a single debugging LED, providing a visual indicator for data transmission and system status. A reset button is integrated to facilitate system resets as needed. Additionally, dedicated headers are included to allow seamless connection with the Snap Debug Programmer, enabling efficient debugging and firmware updates.</p> <p>A 3.3V voltage regulator is incorporated to ensure a stable power supply for the HMI subsystem. This schematic is designed to meet user needs and project requirements by enabling real-time data display, supporting UART communication, and facilitating efficient system debugging through dedicated interfaces.</p>"},{"location":"second-page/#schematic","title":"Schematic","text":""},{"location":"second-page/#download-links","title":"Download Links","text":"<ul> <li>PDF</li> <li>Cadence ZIP Folder</li> </ul>"},{"location":"second-page/#pcb-design","title":"PCB Design","text":"<p>coming soon</p>"},{"location":"static/node_modules/mathjax/","title":"MathJax","text":""},{"location":"static/node_modules/mathjax/#beautiful-math-in-all-browsers","title":"Beautiful math in all browsers","text":"<p>MathJax is an open-source JavaScript display engine for LaTeX, MathML, and AsciiMath notation that works in all modern browsers.  It was designed with the goal of consolidating the recent advances in web technologies into a single, definitive, math-on-the-web platform supporting the major browsers and operating systems.  It requires no setup on the part of the user (no plugins to download or software to install), so the page author can write web documents that include mathematics and be confident that users will be able to view it naturally and easily.  Simply include MathJax and some mathematics in a web page, and MathJax does the rest.</p> <p>Some of the main features of MathJax include:</p> <ul> <li> <p>High-quality display of LaTeX, MathML, and AsciiMath notation in HTML pages</p> </li> <li> <p>Supported in most browsers with no plug-ins, extra fonts, or special   setup for the reader</p> </li> <li> <p>Easy for authors, flexible for publishers, extensible for developers</p> </li> <li> <p>Supports math accessibility, cut-and-paste interoperability, and other   advanced functionality</p> </li> <li> <p>Powerful API for integration with other web applications</p> </li> </ul> <p>See http://www.mathjax.org/ for additional details about MathJax, and https://docs.mathjax.org for the MathJax documentation.</p>"},{"location":"static/node_modules/mathjax/#mathjax-components","title":"MathJax Components","text":"<p>MathJax version 3 uses files called components that contain the various MathJax modules that you can include in your web pages or access on a server through NodeJS.  Some components combine all the pieces you need to run MathJax with one or more input formats and a particular output format, while other components are pieces that can be loaded on demand when needed, or by a configuration that specifies the pieces you want to combine in a custom way.  For usage instructions, see the MathJax documentation.</p> <p>Components provide a convenient packaging of MathJax's modules, but it is possible for you to form your own custom components, or to use MathJax's modules directly in a node application on a server.  There are web examples showing how to use MathJax in web pages and how to build your own components, and node examples illustrating how to use components in node applications or call MathJax modules directly.</p>"},{"location":"static/node_modules/mathjax/#whats-in-this-repository","title":"What's in this Repository","text":"<p>This repository contains only the component files for MathJax, not the source code for MathJax (which are available in a separate MathJax source repository).  These component files are the ones served by the CDNs that offer MathJax to the web.  In version 2, the files used on the web were also the source files for MathJax, but in version 3, the source files are no longer on the CDN, as they are not what are run in the browser.</p> <p>The components are stored in the <code>es5</code> directory, and are in ES5 format for the widest possible compatibility.  In the future, we may make an <code>es6</code> directory containing ES6 versions of the components.</p>"},{"location":"static/node_modules/mathjax/#installation-and-use","title":"Installation and Use","text":""},{"location":"static/node_modules/mathjax/#using-mathjax-components-from-a-cdn-on-the-web","title":"Using MathJax components from a CDN on the web","text":"<p>If you are loading MathJax from a CDN into a web page, there is no need to install anything.  Simply use a <code>script</code> tag that loads MathJax from the CDN.  E.g.,</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>See the MathJax documentation, the MathJax Web Demos, and the MathJax Component Repository for more information.</p>"},{"location":"static/node_modules/mathjax/#hosting-your-own-copy-of-the-mathjax-components","title":"Hosting your own copy of the MathJax Components","text":"<p>If you want to host MathJax from your own server, you can do so by installing the <code>mathjax</code> package using <code>npm</code> and moving the <code>es5</code> directory to an appropriate location on your server:</p> <pre><code>npm install mathjax@3\nmv node_modules/mathjax/es5 &lt;path-to-server-location&gt;/mathjax\n</code></pre> <p>Note that we are still making updates to version 2, so include <code>@3</code> when you install, since the latest chronological version may not be version 3.</p> <p>Alternatively, you can get the files via GitHub:</p> <pre><code>git clone https://github.com/mathjax/MathJax.git mj-tmp\nmv mj-tmp/es5 &lt;path-to-server-location&gt;/mathjax\nrm -rf mj-tmp\n</code></pre> <p>Then (in either case) you can use a script tag like the following:</p> <pre><code>&lt;script id=\"MathJax-script\" async src=\"&lt;url-to-your-site&gt;/mathjax/tex-chtml.js\"&gt;&lt;/script&gt;\n</code></pre> <p>where <code>&lt;url-to-your-site&gt;</code> is replaced by the URL to the location where you moved the MathJax files above.</p> <p>See the documentation for details.</p>"},{"location":"static/node_modules/mathjax/#using-mathjax-components-in-a-node-application","title":"Using MathJax components in a node application","text":"<p>To use MathJax components in a node application, install the <code>mathjax</code> package:</p> <pre><code>npm install mathjax@3\n</code></pre> <p>(we are still making updates to version 2, so you should include <code>@3</code> since the latest chronological version may not be version 3).</p> <p>Then require <code>mathjax</code> within your application:</p> <pre><code>require('mathjax').init({ ... }).then((MathJax) =&gt; { ... });\n</code></pre> <p>where the first <code>{ ... }</code> is a MathJax configuration, and the second <code>{ ... }</code> is the code to run after MathJax has been loaded.  E.g.</p> <pre><code>require('mathjax').init({\nloader: {load: ['input/tex', 'output/svg']}\n}).then((MathJax) =&gt; {\nconst svg = MathJax.tex2svg('\\\\frac{1}{x^2-1}', {display: true});\nconsole.log(MathJax.startup.adaptor.outerHTML(svg));\n}).catch((err) =&gt; console.log(err.message));\n</code></pre> <p>Note: this technique is for node-based application only, not for browser applications.  This method sets up an alternative DOM implementation, which you don't need in the browser, and tells MathJax to use node's <code>require()</code> command to load external modules.  This setup will not work properly in the browser, even if you webpack it or bundle it in other ways.</p> <p>See the documentation and the MathJax Node Repository for more details.</p>"},{"location":"static/node_modules/mathjax/#reducing-the-size-of-the-components-directory","title":"Reducing the Size of the Components Directory","text":"<p>Since the <code>es5</code> directory contains all the component files, so if you are only planning one use one configuration, you can reduce the size of the MathJax directory by removing unused components. For example, if you are using the <code>tex-chtml.js</code> component, then you can remove the <code>tex-mml-chtml.js</code>, <code>tex-svg.js</code>, <code>tex-mml-svg.js</code>, <code>tex-chtml-full.js</code>, and <code>tex-svg-full.js</code> configurations, which will save considerable space.  Indeed, you should be able to remove everything other than <code>tex-chtml.js</code>, and the <code>input/tex/extensions</code>, <code>output/chtml/fonts/woff-v2</code>, <code>adaptors</code>, <code>a11y</code>, and <code>sre</code> directories.  If you are using the results only on the web, you can remove <code>adaptors</code> as well.</p> <p>If you are not using A11Y support (e.g., speech generation, or semantic enrichment), then you can remove <code>a11y</code> and <code>sre</code> as well (though in this case you may need to disable the assistive tools in the MathJax contextual menu in order to avoid MathJax trying to load them when they aren't there).</p> <p>If you are using SVG rather than CommonHTML output (e.g., <code>tex-svg.js</code> rather than <code>tex-chtml.js</code>), you can remove the <code>output/chtml/fonts/woff-v2</code> directory.  If you are using MathML input rather than TeX (e.g., <code>mml-chtml.js</code> rather than <code>tex-chtml.js</code>), then you can remove <code>input/tex/extensions</code> as well.</p>"},{"location":"static/node_modules/mathjax/#the-component-files-and-pull-requests","title":"The Component Files and Pull Requests","text":"<p>The <code>es5</code> directory is generated automatically from the contents of the MathJax source repository.  You can rebuild the components using the command</p> <pre><code>npm run make-es5 --silent\n</code></pre> <p>Note that since the contents of this repository are generated automatically, you should not submit pull requests that modify the contents of the <code>es5</code> directory.  If you wish to submit a modification to MathJax, you should make a pull request in the MathJax source repository.</p>"},{"location":"static/node_modules/mathjax/#mathjax-community","title":"MathJax Community","text":"<p>The main MathJax website is http://www.mathjax.org, and it includes announcements and other important information.  A MathJax user forum for asking questions and getting assistance is hosted at Google, and the MathJax bug tracker is hosted at GitHub.</p> <p>Before reporting a bug, please check that it has not already been reported.  Also, please use the bug tracker (rather than the help forum) for reporting bugs, and use the user's forum (rather than the bug tracker) for questions about how to use MathJax.</p>"},{"location":"static/node_modules/mathjax/#mathjax-resources","title":"MathJax Resources","text":"<ul> <li>MathJax Documentation</li> <li>MathJax Components</li> <li>MathJax Source Code</li> <li>MathJax Web Examples</li> <li>MathJax Node Examples</li> <li>MathJax Bug Tracker</li> <li>MathJax Users' Group</li> </ul>"},{"location":"subfolder/","title":"This is the index to a subfolder","text":"<p>Things to discuss</p>"},{"location":"subfolder/another-subfile/","title":"This is what should pop up","text":"<p>Things to discuss</p>"}]}